services:

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl/:/etc/nginx/ssl/
    depends_on:
      - depot-1
      - depot-2
      - depot-3
    networks:
      - depot-network

  depot-1:
    image: usdge-depot
    container_name: depot-cont-1
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - APP_INSTANCE=USDGE DEPOT \#1
      - PORT=${APP_PORT}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - depot-network
    volumes:
      - ${SRC_PATH}:/app/src
    restart: unless-stopped

  depot-2:
    image: usdge-depot
    container_name: depot-cont-2
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - APP_INSTANCE=USDGE DEPOT \#2
      - PORT=${APP_PORT}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - depot-network
    volumes:
      - ${SRC_PATH}:/app/src
    restart: unless-stopped

  depot-3:
    image: usdge-depot
    container_name: depot-cont-3
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - APP_INSTANCE=USDGE DEPOT \#3
      - PORT=${APP_PORT}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - depot-network
    volumes:
      - ${SRC_PATH}:/app/src
    restart: unless-stopped

  mongo:
    image: mongo:latest
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    env_file:
      - .env
    volumes:
      - /var/lib/mongodb:/data/db
    networks:
      - depot-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  mongo-data:

networks:
  depot-network:
    driver: bridge


